#include "Common.hlsl"

uint screenWidth, screenHeight;

RWTexture2D<float3> diffuseFilterSource;
RWTexture2D<float4> specularSourceAndColorTarget;

#define GROUP_SIZE 256

#pragma kernel FilterHorizontalAndCombine

[numthreads(GROUP_SIZE, 1, 1)]
void FilterHorizontalAndCombine(uint3 threadID : SV_DispatchThreadID)
{
	uint2 screenPos = threadID.xy;

	if (screenPos.x >= screenWidth || screenPos.y >= screenHeight) return;

	float3 diffuseLighting  = diffuseFilterSource[screenPos];
	float4 specularLighting = specularSourceAndColorTarget[screenPos];

	float3 color = specularLighting.rgb + diffuseLighting;
	float  alpha = specularLighting.a;

	specularSourceAndColorTarget[screenPos] = float4(color, alpha);
}
