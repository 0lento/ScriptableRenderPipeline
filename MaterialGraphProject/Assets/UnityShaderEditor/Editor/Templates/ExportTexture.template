Shader "${ShaderName}" 
{
	Properties 
	{
		${ShaderPropertiesHeader}
	}	
	
	SubShader 
	{
		Tags { "Queue"="Transparent" "IgnoreProjector"="True" "RenderType"="Transparent" }

		ZWrite Off
		Blend SrcAlpha OneMinusSrcAlpha
		
		Pass 
		{
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			#include "UnityCG.cginc"

			struct v2f 
			{
				float4 pos : SV_POSITION;
				float2 uv : TEXCOORD0;
			};

			sampler2D ${ShaderTextureName};
			float4 ${ShaderTextureName}_ST;

			v2f vert (appdata_full v) 
			{
				v2f o = (v2f)0;
				o.pos = UnityObjectToClipPos(v.vertex);
				o.uv = TRANSFORM_TEX(v.texcoord, ${ShaderTextureName});
				return o;
			}

			half4 frag (v2f IN) : COLOR
			{
				half4 col = tex2D(${ShaderTextureName}, IN.uv);
				return col;
			}
			ENDCG
		}
	}
	Fallback Off
}