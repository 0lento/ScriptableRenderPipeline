Shader "${ShaderName}" 
{
	Properties 
	{
		${ShaderPropertiesHeader}
	}	
	
	SubShader 
	{
		Tags { "Queue"="Geometry" "IgnoreProjector"="True" "RenderType"="Opaque" }

		ZWrite Off
		Blend One Zero
		
		Pass 
		{
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			#include "UnityCG.cginc"

${ShaderPropertyUsages}

			struct v2f 
			{
				float4 pos : SV_POSITION;
${ShaderInputs}
			};

${ShaderFunctions}

			v2f vert (appdata_full v) 
			{
				v2f o = (v2f)0;
				o.pos = UnityObjectToClipPos(v.vertex);
${VertexShaderBody}
				return o;
			}

			half4 frag (v2f IN) : COLOR
			{
${PixelShaderBody}
			}
			ENDCG
		}
	}
	Fallback Off
}